# Generated by Django 3.2.6 on 2021-08-06 06:18

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('birthcertificateNo', models.CharField(blank=True, max_length=50, null=True)),
                ('fatherName', models.CharField(blank=True, max_length=50, null=True)),
                ('motherName', models.CharField(blank=True, max_length=50, null=True)),
                ('registrationNo', models.CharField(blank=True, max_length=30, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=30, null=True)),
                ('divisions', models.CharField(blank=True, choices=[('Chittagong-চট্টগ্রাম', 'Chittagong-চট্টগ্রাম'), ('Dhaka-ঢাকা', 'Dhaka-ঢাকা'), ('Rajshahi-রাজশাহী', 'Rajshahi-রাজশাহী'), ('Sylhet-সিলেট', 'Sylhet-সিলেট'), ('Mymensingh-ময়মনসিংহ', 'Mymensingh-ময়মনসিংহ'), ('Barisal-বরিশাল', 'Barisal-বরিশাল'), ('Rangpur-রংপুর', 'Rangpur-রংপুর'), ('Khulna-খুলনা', 'Khulna-খুলনা')], max_length=30, null=True)),
                ('zilla', models.CharField(blank=True, choices=[('Jessore – যশোর', 'Jessore – যশোর'), ('Dinajpur - দিনাজপুর', 'Dinajpur - দিনাজপুর'), ('Comilla – কুমিল্লা', 'Comilla – কুমিল্লা'), ('Faridpur – ফরিদপুর', 'Faridpur – ফরিদপুর'), ('Bogra – বগুড়া', 'Bogra – বগুড়া'), ('Pabna – পাবনা', 'Pabna – পাবনা'), ('Kushtia – কুষ্টিয়া', 'Kushtia – কুষ্টিয়া'), ('Noakhali - নোয়াখালী', 'Noakhali - নোয়াখালী')], max_length=30, null=True)),
                ('village', models.CharField(blank=True, max_length=30, null=True)),
                ('union', models.CharField(blank=True, max_length=30, null=True)),
                ('word_no', models.CharField(blank=True, choices=[('word-1', 'word-1'), ('word-2', 'word-2'), ('word-3', 'word-3'), ('word-4', 'word-4'), ('word-5', 'word-5'), ('word-6', 'word-6'), ('word-7', 'word-7'), ('word-8', 'word-8'), ('word-9', 'word-9'), ('word-10', 'word-10'), ('word-11', 'word-11'), ('word-12', 'word-12'), ('word-13', 'word-13'), ('word-14', 'word-14'), ('word-15', 'word-15'), ('word-16', 'word-16'), ('word-17', 'word-17'), ('word-18', 'word-18'), ('word-19', 'word-19'), ('word-20', 'word-20')], max_length=30, null=True)),
                ('holdingNo', models.CharField(blank=True, max_length=50, null=True)),
                ('sub_block', models.CharField(blank=True, max_length=30, null=True)),
                ('get_vaccine_from', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile', models.CharField(blank=True, max_length=30, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='Profile Pictures')),
                ('is_baby', models.BooleanField(default=False)),
                ('is_hs', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
